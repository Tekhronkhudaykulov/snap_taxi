{"version":3,"file":"loading.umd.development.js","sources":["../src/index.ts"],"sourcesContent":["import {\n\tExtractRematchDispatchersFromEffects,\n\tPlugin,\n\tModels,\n\tReducer,\n\tNamedModel,\n\tAction,\n} from '@rematch/core'\n\nexport type LoadingPluginType = 'number' | 'boolean' | 'full'\nexport interface LoadingConfig {\n\tname?: string\n\twhitelist?: string[]\n\tblacklist?: string[]\n\ttype?: LoadingPluginType\n\t/**\n\t * @deprecated Use `type: 'number'` instead\n\t */\n\tasNumber?: boolean\n}\ntype PickLoadingPluginType<WhichType extends LoadingPluginType> =\n\tWhichType extends 'number'\n\t\t? number\n\t\t: WhichType extends 'full'\n\t\t? DetailedPayload\n\t\t: boolean\n\ninterface LoadingState<\n\tTModels extends Models<TModels>,\n\tWhichType extends LoadingPluginType\n> {\n\tglobal: PickLoadingPluginType<WhichType>\n\tmodels: {\n\t\t[modelName in keyof TModels]: PickLoadingPluginType<WhichType>\n\t}\n\teffects: {\n\t\t[modelName in keyof TModels]: {\n\t\t\t[effectName in keyof ExtractRematchDispatchersFromEffects<\n\t\t\t\tTModels[modelName]['effects'],\n\t\t\t\tTModels\n\t\t\t>]: PickLoadingPluginType<WhichType>\n\t\t}\n\t}\n}\n\ninterface InitialState<WhichType extends LoadingPluginType> {\n\tglobal: PickLoadingPluginType<WhichType>\n\tmodels: {\n\t\t[modelName: string]: PickLoadingPluginType<WhichType>\n\t}\n\teffects: {\n\t\t[modelName: string]: {\n\t\t\t[effectName: string]: PickLoadingPluginType<WhichType>\n\t\t}\n\t}\n}\n\ntype Converter<WhichType extends LoadingPluginType> = (\n\tcnt: number,\n\tdetailedPayload?: DetailedPayload\n) => PickLoadingPluginType<WhichType>\n\ninterface LoadingModel<\n\tTModels extends Models<TModels>,\n\tWhichType extends LoadingPluginType\n> extends NamedModel<TModels, LoadingState<TModels, WhichType>> {\n\treducers: {\n\t\thide: Reducer<LoadingState<TModels, WhichType>>\n\t\tshow: Reducer<LoadingState<TModels, WhichType>>\n\t}\n}\n\nexport interface ExtraModelsFromLoading<\n\tTModels extends Models<TModels>,\n\tTConfig extends LoadingConfig = {\n\t\ttype: 'boolean'\n\t}\n> extends Models<TModels> {\n\tloading: LoadingModel<\n\t\tTModels,\n\t\tTConfig['type'] extends LoadingPluginType ? TConfig['type'] : 'boolean'\n\t>\n}\n\ntype DetailedPayload = {\n\terror: unknown\n\tsuccess: boolean\n\tloading?: boolean\n}\n\nconst createLoadingAction =\n\t<TModels extends Models<TModels>, WhichType extends LoadingPluginType>(\n\t\tconverter: Converter<WhichType>,\n\t\ti: number,\n\t\tcntState: InitialState<'number'>\n\t): Reducer<LoadingState<TModels, WhichType>> =>\n\t(\n\t\tstate,\n\t\tpayload: Action<{\n\t\t\tname: string\n\t\t\taction: string\n\t\t\tdetailedPayload: DetailedPayload\n\t\t}>['payload']\n\t): LoadingState<TModels, WhichType> => {\n\t\tconst { name, action, detailedPayload } = payload || {\n\t\t\tname: '',\n\t\t\taction: '',\n\t\t}\n\n\t\tcntState.global += i\n\t\tcntState.models[name] += i\n\t\tcntState.effects[name][action] += i\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tglobal: converter(cntState.global, detailedPayload),\n\t\t\tmodels: {\n\t\t\t\t...state.models,\n\t\t\t\t[name]: converter(cntState.models[name], detailedPayload),\n\t\t\t},\n\t\t\teffects: {\n\t\t\t\t...state.effects,\n\t\t\t\t[name]: {\n\t\t\t\t\t...state.effects[name],\n\t\t\t\t\t[action]: converter(cntState.effects[name][action], detailedPayload),\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t}\n\nconst validateConfig = (config: LoadingConfig): void => {\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tif (config.name && typeof config.name !== 'string') {\n\t\t\tthrow new Error('loading plugin config name must be a string')\n\t\t}\n\t\tif (config.asNumber && typeof config.asNumber !== 'boolean') {\n\t\t\tthrow new Error('loading plugin config asNumber must be a boolean')\n\t\t}\n\t\tif (config.asNumber) {\n\t\t\tconsole.warn(\n\t\t\t\t[\n\t\t\t\t\t'@rematch/loading deprecation warning:',\n\t\t\t\t\t'\\n',\n\t\t\t\t\t'\"asNumber\" property from @rematch/loading is deprecated, consider replacing \"asNumber\" to \"type\": \"number\".',\n\t\t\t\t\t'\\n',\n\t\t\t\t\t'In future Rematch versions, \"asNumber\" will be removed.',\n\t\t\t\t].join(' ')\n\t\t\t)\n\t\t}\n\t\tif (config.whitelist && !Array.isArray(config.whitelist)) {\n\t\t\tthrow new Error(\n\t\t\t\t'loading plugin config whitelist must be an array of strings'\n\t\t\t)\n\t\t}\n\t\tif (config.blacklist && !Array.isArray(config.blacklist)) {\n\t\t\tthrow new Error(\n\t\t\t\t'loading plugin config blacklist must be an array of strings'\n\t\t\t)\n\t\t}\n\t\tif (config.whitelist && config.blacklist) {\n\t\t\tthrow new Error(\n\t\t\t\t'loading plugin config cannot have both a whitelist & a blacklist'\n\t\t\t)\n\t\t}\n\t}\n}\n\nfunction assignExtraPayload<T, B>(insert: boolean, error: T, success: B) {\n\treturn insert ? { error, success } : null\n}\n\nexport default <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tTConfig extends LoadingConfig\n>(\n\tconfig: TConfig = {} as TConfig\n): Plugin<\n\tTModels,\n\tTExtraModels,\n\tExtraModelsFromLoading<\n\t\tTModels,\n\t\tTConfig extends LoadingConfig ? TConfig : { type: 'boolean' }\n\t>\n> => {\n\tvalidateConfig(config)\n\n\tconst loadingModelName = config.name || 'loading'\n\tif (config.asNumber) {\n\t\tconfig.type = 'number'\n\t}\n\tconst isAsNumber = config.type === 'number'\n\tconst isAsDetailed = config.type === 'full'\n\n\tconst converter: Converter<LoadingPluginType> = (cnt, detailedPayload) => {\n\t\tif (isAsNumber) return cnt\n\t\tif (isAsDetailed && detailedPayload) {\n\t\t\treturn { ...detailedPayload, loading: cnt > 0 } as DetailedPayload\n\t\t}\n\t\tif (isAsDetailed) {\n\t\t\treturn { loading: cnt > 0, success: false, error: false }\n\t\t}\n\t\treturn cnt > 0\n\t}\n\n\tconst loadingInitialState: InitialState<LoadingPluginType> = {\n\t\tglobal: converter(0),\n\t\tmodels: {},\n\t\teffects: {},\n\t}\n\n\tconst cntState: InitialState<'number'> = {\n\t\tglobal: 0,\n\t\tmodels: {},\n\t\teffects: {},\n\t}\n\tconst loading: LoadingModel<TModels, LoadingPluginType> = {\n\t\tname: loadingModelName,\n\t\treducers: {\n\t\t\thide: createLoadingAction(converter, -1, cntState),\n\t\t\tshow: createLoadingAction(converter, 1, cntState),\n\t\t},\n\t\tstate: loadingInitialState as LoadingState<TModels, LoadingPluginType>,\n\t}\n\n\tconst initialLoadingValue = converter(0)\n\n\treturn {\n\t\tconfig: {\n\t\t\tmodels: {\n\t\t\t\tloading,\n\t\t\t},\n\t\t},\n\t\tonModel({ name }, rematch): void {\n\t\t\t// do not run dispatch on \"loading\" model\n\t\t\tif (name === loadingModelName) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tcntState.models[name] = 0\n\t\t\tcntState.effects[name] = {}\n\n\t\t\tloadingInitialState.models[name] = initialLoadingValue as number\n\t\t\tloadingInitialState.effects[name] = {}\n\n\t\t\tconst modelActions = rematch.dispatch[name]\n\n\t\t\t// map over effects within models\n\t\t\tObject.keys(modelActions).forEach((action: string) => {\n\t\t\t\tif (rematch.dispatch[name][action].isEffect === false) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tcntState.effects[name][action] = 0\n\t\t\t\tloadingInitialState.effects[name][action] =\n\t\t\t\t\tinitialLoadingValue as number\n\n\t\t\t\tconst actionType = `${name}/${action}`\n\n\t\t\t\t// ignore items not in whitelist\n\t\t\t\tif (config.whitelist && !config.whitelist.includes(actionType)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// ignore items in blacklist\n\t\t\t\tif (config.blacklist && config.blacklist.includes(actionType)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// copy orig effect pointer\n\t\t\t\tconst origEffect = rematch.dispatch[name][action]\n\n\t\t\t\t// create function with pre & post loading calls\n\t\t\t\tconst effectWrapper = (...props: any): any => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// show loading\n\t\t\t\t\t\trematch.dispatch[loadingModelName].show({\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\tdetailedPayload: assignExtraPayload(isAsDetailed, false, false),\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// dispatch the original action\n\t\t\t\t\t\tconst effectResult = origEffect(...props)\n\n\t\t\t\t\t\t// check if result is a promise\n\t\t\t\t\t\tif (effectResult?.then) {\n\t\t\t\t\t\t\t// hide loading when promise finishes either with success or error\n\t\t\t\t\t\t\treturn effectResult\n\t\t\t\t\t\t\t\t.then((r: any) => {\n\t\t\t\t\t\t\t\t\trematch.dispatch[loadingModelName].hide({\n\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\t\t\tdetailedPayload: assignExtraPayload(\n\t\t\t\t\t\t\t\t\t\t\tisAsDetailed,\n\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\treturn r\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch((err: any) => {\n\t\t\t\t\t\t\t\t\trematch.dispatch[loadingModelName].hide({\n\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\t\t\tdetailedPayload: assignExtraPayload(\n\t\t\t\t\t\t\t\t\t\t\tisAsDetailed,\n\t\t\t\t\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tthrow err\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// original action doesn't return a promise so there's nothing to wait for\n\t\t\t\t\t\trematch.dispatch[loadingModelName].hide({\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\tdetailedPayload: assignExtraPayload(isAsDetailed, false, true),\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t// return the original result of this reducer\n\t\t\t\t\t\treturn effectResult\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\trematch.dispatch[loadingModelName].hide({\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\tdetailedPayload: assignExtraPayload(isAsDetailed, error, false),\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\teffectWrapper.isEffect = true\n\n\t\t\t\t// replace existing effect with new wrapper\n\t\t\t\trematch.dispatch[name][action] = effectWrapper\n\t\t\t})\n\t\t},\n\t}\n}\n"],"names":["createLoadingAction","converter","i","cntState","state","payload","name","action","detailedPayload","global","models","effects","validateConfig","config","Error","asNumber","console","warn","join","whitelist","Array","isArray","blacklist","assignExtraPayload","insert","error","success","loadingModelName","type","isAsNumber","isAsDetailed","cnt","loading","loadingInitialState","reducers","hide","show","initialLoadingValue","onModel","rematch","modelActions","dispatch","Object","keys","forEach","isEffect","actionType","includes","origEffect","effectWrapper","effectResult","then","r","err"],"mappings":"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"}