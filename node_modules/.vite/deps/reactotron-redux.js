import {
  require_dist
} from "./chunk-5KF6OQG7.js";
import {
  __commonJS
} from "./chunk-J43GMYXM.js";

// node_modules/reactotron-redux/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/reactotron-redux/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true }), require_dist();
    function _typeof(a) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a2) {
        return typeof a2;
      } : function(a2) {
        return a2 && "function" == typeof Symbol && a2.constructor === Symbol && a2 !== Symbol.prototype ? "symbol" : typeof a2;
      }, _typeof(a);
    }
    function _defineProperty(a, b, c) {
      return b in a ? Object.defineProperty(a, b, { value: c, enumerable: true, configurable: true, writable: true }) : a[b] = c, a;
    }
    function _objectSpread(a) {
      for (var b = 1; b < arguments.length; b++) {
        var c = null == arguments[b] ? {} : arguments[b], d = Object.keys(c);
        "function" == typeof Object.getOwnPropertySymbols && (d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a2) {
          return Object.getOwnPropertyDescriptor(c, a2).enumerable;
        }))), d.forEach(function(b2) {
          _defineProperty(a, b2, c[b2]);
        });
      }
      return a;
    }
    function _toConsumableArray(a) {
      return _arrayWithoutHoles(a) || _iterableToArray(a) || _nonIterableSpread();
    }
    function _arrayWithoutHoles(a) {
      if (Array.isArray(a)) {
        for (var b = 0, c = Array(a.length); b < a.length; b++)
          c[b] = a[b];
        return c;
      }
    }
    function _iterableToArray(a) {
      if (Symbol.iterator in Object(a) || "[object Arguments]" === Object.prototype.toString.call(a))
        return Array.from(a);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    }
    var stateCleaner = function(a) {
      return a.toJS ? a.toJS() : a;
    };
    function pathObject(a, b) {
      if (!a)
        return b;
      for (var c, d = a.split("."), e = b, f = 0; f < d.length; f++)
        if (c = d[f], e = e[c], f < d.length - 1 && "object" !== _typeof(e)) {
          e = void 0;
          break;
        }
      return e;
    }
    function createSubscriptionHandler(a, b) {
      function c() {
        if (!a || !a.reduxStore || "function" != typeof a.reduxStore.getState)
          return [];
        var b2 = a.reduxStore.getState(), c2 = [];
        return e.forEach(function(a2) {
          var d2 = a2, e2 = false;
          a2 && a2.endsWith("*") && (e2 = true, d2 = a2.substr(0, a2.length - 2));
          var f = pathObject(d2, b2);
          e2 && d2 && f ? c2.push.apply(c2, _toConsumableArray(Object.entries(f).map(function(a3) {
            return { path: "".concat(d2, ".").concat(a3[0]), value: a3[1] };
          }))) : c2.push({ path: d2, value: f });
        }), c2;
      }
      function d() {
        var b2 = c();
        0 < b2.length && a.stateValuesChange(b2);
      }
      var e = [];
      return b(function() {
        a.reduxStore.subscribe(d);
      }), { sendSubscriptions: function() {
        var b2 = c();
        a.stateValuesChange(b2);
      }, sendSubscriptionsIfNeeded: d, setSubscriptions: function(a2) {
        e = a2;
      } };
    }
    function createCommandHandler(a, b, c) {
      var d = createSubscriptionHandler(a, c);
      return function(c2) {
        var e = c2.type, f = c2.payload, g = a.reduxStore;
        switch (e) {
          case "state.keys.request":
          case "state.values.request":
            var h = stateCleaner(g.getState());
            if (!f.path)
              a.stateKeysResponse(null, "state.keys.request" === e ? Object.keys(h) : h);
            else {
              var i = pathObject(f.path, h), j = "state.keys.request" === e ? a.stateKeysResponse : a.stateValuesResponse;
              j(f.path, "state.keys.request" === e ? "object" === _typeof(i) ? Object.keys(i) : void 0 : i);
            }
            break;
          case "state.values.subscribe":
            d.setSubscriptions(f.paths), d.sendSubscriptions();
            break;
          case "state.action.dispatch":
            g.dispatch(f.action);
            break;
          case "state.backup.request":
            var k = g.getState();
            b.onBackup && (k = b.onBackup(k)), a.send("state.backup.response", { state: k });
            break;
          case "state.restore.request":
            var l = f.state;
            b.onRestore && (l = b.onRestore(f.state, g.getState())), a.reduxStore.dispatch({ type: b.restoreActionType, state: l });
        }
      };
    }
    function createSendAction(a) {
      return function(b, c) {
        var d = !!(2 < arguments.length && arguments[2] !== void 0) && arguments[2], e = b.type;
        "symbol" === _typeof(e) && (e = e.toString().replace(/^Symbol\(/, "").replace(/\)$/, "")), a.send("state.action.complete", { name: e, action: b, ms: c }, d);
      };
    }
    var DEFAULT_REPLACER_TYPE = "REACTOTRON_RESTORE_STATE";
    function reactotronReducer(a) {
      var b = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : DEFAULT_REPLACER_TYPE;
      return function(c, d) {
        var e = d.type === b ? d.state : c;
        return a(e, d);
      };
    }
    function createCustomDispatch(a, b, c) {
      var d = [c.restoreActionType].concat(_toConsumableArray(c.except || []));
      return function(e) {
        var f = a.startTimer(), g = b.dispatch(e), h = f(), i = "PERFORM_ACTION" === e.type && e.action ? e.action : e, j = d.some(function(a2) {
          return "string" == typeof a2 ? i.type === a2 : "function" == typeof a2 ? a2(i.type) : !!(a2 instanceof RegExp) && a2.test(i.type);
        });
        if (!j) {
          var k = false;
          c && "function" == typeof c.isActionImportant && (k = !!c.isActionImportant(i)), a.reportReduxAction(i, h, k);
        }
        return g;
      };
    }
    function createEnhancer(a, b, c) {
      return function() {
        var d = !!(0 < arguments.length && arguments[0] !== void 0) && arguments[0];
        return function(e) {
          return function(f) {
            for (var g = arguments.length, h = Array(1 < g ? g - 1 : 0), i = 1; i < g; i++)
              h[i - 1] = arguments[i];
            var j = e.apply(void 0, [reactotronReducer(f, b.restoreActionType)].concat(h)), k = _objectSpread({}, j, { dispatch: createCustomDispatch(a, j, b) });
            return d || (a.reduxStore = k, c()), k;
          };
        };
      };
    }
    function reactotronRedux() {
      var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {}, b = _objectSpread({}, a, { restoreActionType: a.restoreActionType || DEFAULT_REPLACER_TYPE }), c = [], d = function(a2) {
        c.push(a2);
      }, e = function() {
        c.forEach(function(a2) {
          a2();
        });
      };
      return function(a2) {
        return { onCommand: createCommandHandler(a2, b, d), features: { createEnhancer: createEnhancer(a2, b, e), setReduxStore: function(b2) {
          a2.reduxStore = b2, e();
        }, reportReduxAction: createSendAction(a2) } };
      };
    }
    exports.reactotronRedux = reactotronRedux;
  }
});
export default require_dist2();
//# sourceMappingURL=reactotron-redux.js.map
